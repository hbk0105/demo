
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    # 로그 포맷 
    log_format main '$remote_addr - $remote_user [$time_local] '
                  '"$replaced_request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent" $request_time '
                  '$upstream_response_time "$upstream_addr" "$http_x_forwarded_for" '
                  '$upstream_cache_status';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        access_log  logs/localhost8080.log  main;

        # https://blog.leocat.kr/notes/2020/08/26/nginx-replace-url-and-param-in-access-log

        set $replaced_request $request;
        if ($replaced_request ~ (.*)lat=[^&]*(.*)) {
            set $replaced_request $1lat=****$2;
        }
        if ($replaced_request ~ (.*)lng=[^&]*(.*)) {
            set $replaced_request $1lng=****$2;
        }

        # 기본 설정
        location / {
            proxy_pass http://localhost:8080;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
        }

        # 기타 url 처리 

        # https://m.blog.naver.com/PostView.nhn?blogId=heaves1&logNo=221092915484&proxyReferer=https:%2F%2Fwww.google.com%2F

        # https://bluep.tistory.com/m/40?category=962197

        location ~ \.(css|js|jpg|jpeg|gif|png|html)$ {
            proxy_pass http://localhost:8080;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
        }
        location ~ \.jsp$ {
            proxy_pass http://localhost:8080;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
        }
        location ~ \.do$ {
            proxy_pass http://localhost:8080;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
        }



        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}




    server {
        listen 443 ssl;
        server_name  localhost;
       
        access_log  logs/localhost8443.log  main;

        # https://shine-yeolmae.tistory.com/35

        #ssl                  on;
        ssl_certificate      D:\openssl-0.9.8k_X64\cert.crt;
        ssl_certificate_key  D:\openssl-0.9.8k_X64\cert.key;

        ssl_session_cache   shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_protocols       SSLv2 SSLv3 TLSv1;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;


       location / {
                proxy_redirect  off;
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Scheme $scheme;
                proxy_pass https://localhost:8443;
        }

    }



}
